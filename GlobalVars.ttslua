--we put all our stuff in a table under global, so we don't interfere with other people's stuff
NUM_GLOBAL_VAR = '__NUM_GLOBAL_VAR'

--when objects set 'constant' values, we record it here.
NUM_GLOBAL_OBJ_SETTER_VAR = '__NUM_GLOBAL_OBJ'

function ensureGlobalTablesExist()
  if(Global.getTable(NUM_GLOBAL_VAR) == nil) then
    Global.setTable(NUM_GLOBAL_VAR,{})
  end
  if(Global.getTable(NUM_GLOBAL_OBJ_SETTER_VAR) == nil) then
    Global.setTable(NUM_GLOBAL_OBJ_SETTER_VAR,{})
  end
end

--sets a global value
function setGlobalValue(name,val)
  ensureGlobalTablesExist()
  local t = Global.getTable(NUM_GLOBAL_VAR);
  t[name]=val
  Global.setTable(NUM_GLOBAL_VAR,t);
end

--gets a global value, set with either setConstGlobalValue or setGlobalValue
function getGlobalValue(name)
  ensureGlobalTablesExist()
  local t = Global.getTable(NUM_GLOBAL_VAR);
  local v = t[name]

  if(v == nil) then
    print("Warning: Can't find NumScript Value for: "..name)
  end

  return v
end

--gets a global value, set with either setConstGlobalValue or setGlobalValue
function getGlobalValueWithDef(name,def)
  ensureGlobalTablesExist()
  local t = Global.getTable(NUM_GLOBAL_VAR);

  local v = t[name]

  if(v == nil) then
    return def
  end

  return v
end

-- function flashObj(obj,count)
--   obj.highlightOff()
--   obj.highlightOn({r=1,g=1,b=1})
--   Wait.condition(function() return false end,function() return false end,1,
--     function()
--       obj.highlightOff()
--       obj.highlightOn({r=1,g=0,b=0})
--       if count <= 0 then return end
--       flashObj(obj,count-1)
--     end)
--   obj.highlightOff()
-- end


--highlights an object if not nil
function maybeHighlightObj(name,obj)
  if(obj ~= nil) then
    print("Highlighting "..name.." guid: "..obj.getGUID())
    obj.highlightOn({r=1,g=0,b=0},15)
  else
    print(name.." does not have an associated object")
  end
end

--updates an existing global value using a function. Uses
--default if value is nil
function updateGlobalValue(name,func,default)
  local v = func(getGlobalValueWithDef(name,default))
  setGlobalValue(name,v)
end

--sets a variable that is supposed to be constant
--if two objects set it to different values, will physically highlight those objects on the table
--
--Useful for having an object on the table that is supposed to be unique and referable by name
function setConstGlobalValue(myObj,name,myV)
  ensureGlobalTablesExist()
  local t = Global.getTable(NUM_GLOBAL_VAR);
  local ts = Global.getTable(NUM_GLOBAL_OBJ_SETTER_VAR);

  local othV = t[name]

  if(othV ~= nil and othV ~= myV) then
    print("Warning: two objects are attempting to set the variable..")
    local otherObj = ts[name]

    maybeHighlightObj("obj1",otherObj)
    maybeHighlightObj("obj2",myObj)
  end

  t[name]=myV
  Global.setTable(NUM_GLOBAL_VAR,t)

  ts[name] = myObj
  Global.setTable(NUM_GLOBAL_OBJ_SETTER_VAR,ts)
end
